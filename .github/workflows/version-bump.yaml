name: Version Bump

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Select version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write        
      pull-requests: write   
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1
          run_install: false

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Create release branch first
      - name: Create release branch
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$NEW_VERSION" >> $GITHUB_ENV
          echo "Checking out release branch..."
          git checkout -b release/temp || true

      # Bump version & commit on the new branch
      - name: Bump version and commit
        run: |
          NEW_VERSION=$(pnpm version ${{ inputs.release_type }} --no-git-tag-version | awk '{print $NF}')
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version: $NEW_VERSION"

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add package.json pnpm-lock.yaml
          if git diff --cached --quiet; then
            echo "‚ö†Ô∏è No version bump changes detected. Skipping commit & PR."
            exit 0
          fi

          git commit -m "chore(release): bump version to $NEW_VERSION"

          # Rename branch with actual version number
          git branch -m release/$NEW_VERSION
          git push origin release/$NEW_VERSION

      - name: Check if branch has differences
        run: |
          if git diff origin/main..origin/release/${{ env.new_version }} --quiet; then
            echo "‚ö†Ô∏è No changes detected between main and release/${{ env.new_version }}. Skipping PR."
            exit 0
          fi

      - name: Create Pull Request
        run: |
          gh pr create \
            --base main \
            --head release/${{ env.new_version }} \
            --title "Release: ${{ env.new_version }}" \
            --body "Auto-generated release PR for version ${{ env.new_version }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify about Major Release (if major)
        if: inputs.release_type == 'major'
        run: echo "üö® Major version update detected! Please review carefully."
