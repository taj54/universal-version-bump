name: 'release'

on:
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write  # allow pushing tags & creating releases

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # ensure full history & tags
      

      - name: Set up Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
            version: 10.13.1 

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Add build artifacts
        run: git add dist -f

      - name: Extract release notes from CHANGELOG
        if: env.release_type != 'patch'
        id: changelog
        run: |
          # Match lines starting with "## vX.Y.Z " until the next "## "
            awk "/^## v${{ env.version }}[[:space:]]/{flag=1; next} /^## /{flag=0} flag" CHANGELOG.md > RELEASE_NOTES.md
          
            echo "notes<<EOF" >> $GITHUB_ENV
            if [ "${{ env.release_type }}" = "major" ]; then
              echo "## ðŸš€ Major Release" >> $GITHUB_ENV
            elif [ "${{ env.release_type }}" = "minor" ]; then
              echo "## âœ¨ Minor Release" >> $GITHUB_ENV
            fi
            echo "" >> $GITHUB_ENV
            cat RELEASE_NOTES.md >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: env.release_type != 'patch'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.version }}
          name: "Release v${{ env.version }}"
          body: ${{ env.notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
